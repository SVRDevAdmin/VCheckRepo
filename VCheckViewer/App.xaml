<Application x:Class="VCheckViewer.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
             xmlns:local="clr-namespace:VCheckViewer"
             xmlns:culture="clr-namespace:VCheckViewer.Lib.Culture"
             DispatcherUnhandledException="OnDispatcherUnhandledException"
             Exit="OnExit"
             Startup="OnStartup">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ui:ThemesDictionary Theme="Dark" />
                <ui:ControlsDictionary />

                <ResourceDictionary Source="Template/Templates.xaml" />
                <ResourceDictionary Source="ResourceDictionary.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <Style TargetType="{x:Type TextBlock}" x:Key="WrappingStyle">
                <Setter Property="TextWrapping" Value="Wrap"/>
            </Style>

            <Style x:Key="Services_MenuItem_With_Dropdown" TargetType="MenuItem">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type MenuItem}">
                            <Border x:Name="border" Background="White" BorderThickness="0" Height="53" Width="210">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="5*" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <!--// Icon //-->
                                    <ContentPresenter ContentSource="Icon" HorizontalAlignment="Left" VerticalAlignment="Center" Height="45" Grid.Column="0"/>

                                    <!--// Text //-->
                                    <ContentPresenter ContentSource="Header" TextBlock.Foreground="Black" TextBlock.FontFamily="Noto Sans" TextBlock.FontSize="15" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="10,0,0,0" Grid.Column="1">
                                        <ContentPresenter.Resources>
                                            <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource WrappingStyle}"/>
                                        </ContentPresenter.Resources>
                                    </ContentPresenter>

                                    <!--// Dropdown Icon //-->
                                    <Image Source="../../Content/Images/path_3550.png" Stretch="None" HorizontalAlignment="Right" VerticalAlignment="Center" Grid.Column="2"/>

                                    <!--// Popup //-->
                                    <Popup x:Name="PART_Popup" AllowsTransparency="True" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" Width="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType={x:Type MenuItem}}}">
                                        <Border x:Name="SubMenuBorder" Background="White" BorderBrush="#484546" BorderThickness="1" CornerRadius="10">
                                            <ScrollViewer x:Name="SubMenuScrollViewer" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer,TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                                <Grid RenderOptions.ClearTypeHint="Enabled">
                                                    <Canvas HorizontalAlignment="Left" VerticalAlignment="Top" />
                                                    <ItemsPresenter x:Name="ItemsPresenter" />
                                                </Grid>
                                            </ScrollViewer>
                                        </Border>
                                    </Popup>
                                </Grid>
                            </Border>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSuspendingPopupAnimation" Value="True">
                                    <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--// Key: Round Button //-->
            <Style x:Key="RoundButton" TargetType="Button">
                <Setter Property="SnapsToDevicePixels" Value="False" />
                <Setter Property="OverridesDefaultStyle" Value="False" />
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="AllowDrop" Value="False" />
                <Setter Property="Foreground" Value="Black" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border Name="Border"
                                    CornerRadius="18"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Height="40"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Center">
                                <ContentPresenter x:Name="contentPresenter" 
                                      ContentTemplate="{TemplateBinding ContentTemplate}" 
                                      Content="{TemplateBinding Content}" 
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      Margin="{TemplateBinding Padding}" 
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="Border" Property="BorderBrush" Value="#D5D8DC" />
                                    <Setter TargetName="Border" Property="Background" Value="#D5D8DC" />
                                    <Setter Property="Foreground" Value="#F4F6F7" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--// Key: BackButton //-->
            <Style x:Key="BackButton" TargetType="{x:Type Button}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Border x:Name="border" Margin="10,10,0,0">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="20"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Image Source="../../../../Content/Images/group_10.png" Grid.Column="0" VerticalAlignment="Center"/>
                                    <TextBlock x:Name="lbBack" Text="Back to User Listing" Grid.Column="1" Margin="10,0,0,0" VerticalAlignment="Center"/>
                                </Grid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--// TextBox //-->
            <Style TargetType="{x:Type TextBox}">
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="OverridesDefaultStyle" Value="True"/>
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="AllowDrop" Value="true"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBoxBase}">
                            <Border 
                              Name="Border"
                              CornerRadius="20" 
                              Padding="10"
                              Background="#FFFFFF"
                              BorderBrush="#888888"
                              BorderThickness="0">
                                <ScrollViewer Margin="0" x:Name="PART_ContentHost"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="Border" Property="Background" Value="#EEEEEE"/>
                                    <Setter TargetName="Border" Property="BorderBrush" Value="#EEEEEE"/>
                                    <Setter Property="Foreground" Value="#888888"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--// DatePicker //-->
            <Style TargetType="{x:Type DatePicker}">
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="OverridesDefaultStyle" Value="False"/>
                <Setter Property="AllowDrop" Value="true"/>
                <Setter Property="Height" Value="35" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="Margin" Value="10" />
            </Style>

            <!--// PasswordBox //-->
            <Style TargetType="{x:Type PasswordBox}">
                <Setter Property="OverridesDefaultStyle" Value="False" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="Height" Value="35" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="Padding" Value="10" />
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>
